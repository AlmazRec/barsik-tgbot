const TelegramApi = require("node-telegram-bot-api")
const token = "your_token"
const bot = new TelegramApi(token, {polling: true})

let click_count = 0
let click_power = 5
let click_sum = 0

const upgrades = {
    "–£–ª—É—á—à–µ–Ω–∏–µ –∫–ª–∏–∫–∞": 50,
    "–ö–æ—à–∞—á–∏–π –∫–æ—Ä–º": 200,
}
bot.setMyCommands([
    {command: "/start", description: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"},
    {command: "/get_barsik", description: "–ü–æ–ª—É—á–∏—Ç—å –±–∞—Ä—Å—è—Ç—É"},
    {command: "/balance", description: "–í–∞—à–∏ –±–∞—Ä—Å—è—Ç–∞"},
    {command: "/slots", description: "–ò–≥—Ä—ã —Å–ª–æ—Ç—ã"}
])
const menuButtons = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: "üßç‚Äç‚ôÇÔ∏è–ü—Ä–æ—Ñ–∏–ª—åüßç‚Äç‚ôÇÔ∏è", callback_data: "profile"}],
            [{text: "üíµ–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—åüíµ", callback_data: "earn"}],
            [{text: "–°–ª–æ—Ç—ã", callback_data: "slots"}],
            [{text: "üõçÔ∏è–ú–∞–≥–∞–∑–∏–ΩüõçÔ∏è", callback_data: "shop"}]
        ]
    })
}
const shopButtons = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: "–£–ª—É—á—à–∏—Ç—å —Å–∏–ª—É –∫–ª–∏–∫–∞ X2‚¨ÜÔ∏è (100–ë–†)", callback_data: "upgrade_click"}]
        ]
    })
}
const tapButton = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: "–ü–æ–ª—É—á–∏—Ç—å –±–∞—Ä—Å—è—Ç—É", callback_data: "get"}],
            [{text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data: 'menu'}]
        ]
    })
}
async function add_barsik(chatId) {
    click_count = click_count + click_power
    click_sum += 1
    await bot.sendMessage(chatId, `–í–∞–º –¥–æ–±–∞–≤–∏–ª–æ—Å—å ${click_power} –±–∞—Ä—Å—è—Ç.\n–ë–∞–ª–∞–Ω—Å: ${click_count}`, tapButton)
}



bot.on("message", async msg => {
    const text = msg.text
    const chatId = msg.chat.id
    if(text === '/start') {
        await bot.sendMessage(chatId, `Meowüò∫`, menuButtons)
    }
    if(text === "/get_barsik") {
        await add_barsik(chatId)
    }
    if(text === "/balance") {
        await bot.sendMessage(chatId, `–í–∞—à –±–∞–ª–∞–Ω—Å: ${click_count}`)
    }
})



bot.on('callback_query', async msg => {
    const data = msg.data
    const chatId = msg.message.chat.id

    if(data === "get" || data === "earn") {
        await add_barsik(chatId)
    }
    if(data === "profile") {
        await bot.sendMessage(chatId, `üò∫–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${msg.from.first_name}üò∫\nüò∫–ö–æ–ª-–≤–æ –±–∞—Ä—Å—è—Ç: ${click_count}\nüëÜ–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: ${click_sum}`)
    }
    if(data === "menu"){
        await bot.sendMessage(chatId, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é", menuButtons)
    }
    if(data === 'shop') {
        await bot.sendMessage(chatId, "–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –º–∞–≥–∞–∑–∏–Ω–∞", shopButtons)
    }
    if (data === 'upgrade_click') {
        const upgradeCost = upgrades["–£–ª—É—á—à–µ–Ω–∏–µ –∫–ª–∏–∫–∞"];
        if (click_count >= upgradeCost) {
            click_count -= upgradeCost;
            click_power *= 2;
            await bot.sendMessage(chatId, `–í—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ —Å–∏–ª—É –∫–ª–∏–∫–∞! –ù–æ–≤–∞—è —Å–∏–ª–∞ –∫–ª–∏–∫–∞: ${click_power}`);
        } else {
            await bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞—Ä—Å—è—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è.");
        }
    }
})

bot.on("callback_query", async msg => {
    const data = msg.data
    const chatId = msg.message.chat.id
    if (data === "slots") {
        await bot.sendMessage(chatId, "–ò–≥—Ä–∞ –ø–æ—à–ª–∞!")

        const symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üçâ'];
        const slot1 = symbols[Math.floor(Math.random() * symbols.length)];
        const slot2 = symbols[Math.floor(Math.random() * symbols.length)];
        const slot3 = symbols[Math.floor(Math.random() * symbols.length)];

        if (slot1 === slot2 && slot2 === slot3) {
            await bot.sendMessage(chatId, `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! ${slot1} ${slot2} ${slot3}`)
            click_count *= 2
        } else {
            await bot.sendMessage(chatId, `–£–≤—ã, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. ${slot1} ${slot2} ${slot3}`)
            click_count *= 0.5
        }
    }
})
